{{- if .Values.ragService.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-service
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.ragService.replicas }}
  selector:
    matchLabels:
      app: rag-service
  template:
    metadata:
      labels:
        app: rag-service
    spec:
      containers:
      - name: rag-service
        image: {{ .Values.ragService.image.repository }}:{{ .Values.ragService.image.tag }}
        imagePullPolicy: {{ .Values.ragService.image.pullPolicy }}
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: host
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: db-config
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: EMBEDDING_SERVICE_HOST
          value: "embedding-service"
        resources:
{{ toYaml .Values.ragService.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: rag-service
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: rag-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
{{- end }}